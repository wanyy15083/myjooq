/**
 * This class is generated by jOOQ
 */
package com.frotly.jooq.data.tables;


import com.frotly.jooq.data.Keys;
import com.frotly.jooq.data.Learn;
import com.frotly.jooq.data.tables.records.OrderdetailRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orderdetail extends TableImpl<OrderdetailRecord> {

	private static final long serialVersionUID = 2110183941;

	/**
	 * The reference instance of <code>learn.orderdetail</code>
	 */
	public static final Orderdetail ORDERDETAIL = new Orderdetail();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OrderdetailRecord> getRecordType() {
		return OrderdetailRecord.class;
	}

	/**
	 * The column <code>learn.orderdetail.id</code>.
	 */
	public final TableField<OrderdetailRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>learn.orderdetail.orders_id</code>. 订单id
	 */
	public final TableField<OrderdetailRecord, Integer> ORDERS_ID = createField("orders_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "订单id");

	/**
	 * The column <code>learn.orderdetail.items_id</code>. 商品id
	 */
	public final TableField<OrderdetailRecord, Integer> ITEMS_ID = createField("items_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品id");

	/**
	 * The column <code>learn.orderdetail.items_num</code>. 商品购买数量
	 */
	public final TableField<OrderdetailRecord, Integer> ITEMS_NUM = createField("items_num", org.jooq.impl.SQLDataType.INTEGER, this, "商品购买数量");

	/**
	 * Create a <code>learn.orderdetail</code> table reference
	 */
	public Orderdetail() {
		this("orderdetail", null);
	}

	/**
	 * Create an aliased <code>learn.orderdetail</code> table reference
	 */
	public Orderdetail(String alias) {
		this(alias, ORDERDETAIL);
	}

	private Orderdetail(String alias, Table<OrderdetailRecord> aliased) {
		this(alias, aliased, null);
	}

	private Orderdetail(String alias, Table<OrderdetailRecord> aliased, Field<?>[] parameters) {
		super(alias, Learn.LEARN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OrderdetailRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ORDERDETAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OrderdetailRecord> getPrimaryKey() {
		return Keys.KEY_ORDERDETAIL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OrderdetailRecord>> getKeys() {
		return Arrays.<UniqueKey<OrderdetailRecord>>asList(Keys.KEY_ORDERDETAIL_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OrderdetailRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OrderdetailRecord, ?>>asList(Keys.FK_ORDERDETAIL_1, Keys.FK_ORDERDETAIL_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Orderdetail as(String alias) {
		return new Orderdetail(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Orderdetail rename(String name) {
		return new Orderdetail(name, null);
	}
}
