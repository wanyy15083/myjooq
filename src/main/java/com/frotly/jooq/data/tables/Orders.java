/**
 * This class is generated by jOOQ
 */
package com.frotly.jooq.data.tables;


import com.frotly.jooq.data.Keys;
import com.frotly.jooq.data.Learn;
import com.frotly.jooq.data.tables.records.OrdersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orders extends TableImpl<OrdersRecord> {

	private static final long serialVersionUID = -828550765;

	/**
	 * The reference instance of <code>learn.orders</code>
	 */
	public static final Orders ORDERS = new Orders();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OrdersRecord> getRecordType() {
		return OrdersRecord.class;
	}

	/**
	 * The column <code>learn.orders.id</code>.
	 */
	public final TableField<OrdersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>learn.orders.user_id</code>. 下单用户id
	 */
	public final TableField<OrdersRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "下单用户id");

	/**
	 * The column <code>learn.orders.number</code>. 订单号
	 */
	public final TableField<OrdersRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "订单号");

	/**
	 * The column <code>learn.orders.createtime</code>. 创建订单时间
	 */
	public final TableField<OrdersRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建订单时间");

	/**
	 * The column <code>learn.orders.note</code>. 备注
	 */
	public final TableField<OrdersRecord, String> NOTE = createField("note", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "备注");

	/**
	 * Create a <code>learn.orders</code> table reference
	 */
	public Orders() {
		this("orders", null);
	}

	/**
	 * Create an aliased <code>learn.orders</code> table reference
	 */
	public Orders(String alias) {
		this(alias, ORDERS);
	}

	private Orders(String alias, Table<OrdersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Orders(String alias, Table<OrdersRecord> aliased, Field<?>[] parameters) {
		super(alias, Learn.LEARN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OrdersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ORDERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OrdersRecord> getPrimaryKey() {
		return Keys.KEY_ORDERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OrdersRecord>> getKeys() {
		return Arrays.<UniqueKey<OrdersRecord>>asList(Keys.KEY_ORDERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OrdersRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OrdersRecord, ?>>asList(Keys.FK_ORDERS_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Orders as(String alias) {
		return new Orders(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Orders rename(String name) {
		return new Orders(name, null);
	}
}
