/**
 * This class is generated by jOOQ
 */
package com.frotly.jooq.data.tables.records;


import com.frotly.jooq.data.tables.Orderdetail;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderdetailRecord extends UpdatableRecordImpl<OrderdetailRecord> implements Record4<Integer, Integer, Integer, Integer> {

	private static final long serialVersionUID = 1824741724;

	/**
	 * Setter for <code>learn.orderdetail.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>learn.orderdetail.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>learn.orderdetail.orders_id</code>. 订单id
	 */
	public void setOrdersId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>learn.orderdetail.orders_id</code>. 订单id
	 */
	public Integer getOrdersId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>learn.orderdetail.items_id</code>. 商品id
	 */
	public void setItemsId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>learn.orderdetail.items_id</code>. 商品id
	 */
	public Integer getItemsId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>learn.orderdetail.items_num</code>. 商品购买数量
	 */
	public void setItemsNum(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>learn.orderdetail.items_num</code>. 商品购买数量
	 */
	public Integer getItemsNum() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Orderdetail.ORDERDETAIL.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Orderdetail.ORDERDETAIL.ORDERS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Orderdetail.ORDERDETAIL.ITEMS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Orderdetail.ORDERDETAIL.ITEMS_NUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getOrdersId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getItemsId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getItemsNum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderdetailRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderdetailRecord value2(Integer value) {
		setOrdersId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderdetailRecord value3(Integer value) {
		setItemsId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderdetailRecord value4(Integer value) {
		setItemsNum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderdetailRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OrderdetailRecord
	 */
	public OrderdetailRecord() {
		super(Orderdetail.ORDERDETAIL);
	}

	/**
	 * Create a detached, initialised OrderdetailRecord
	 */
	public OrderdetailRecord(Integer id, Integer ordersId, Integer itemsId, Integer itemsNum) {
		super(Orderdetail.ORDERDETAIL);

		setValue(0, id);
		setValue(1, ordersId);
		setValue(2, itemsId);
		setValue(3, itemsNum);
	}
}
